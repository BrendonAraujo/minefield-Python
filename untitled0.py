# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DGdT9oQCH8yK2r3RiQyWNgNnTT-kMb8P
"""

import random

from IPython.display import clear_output

# define the size of the minefield
ROWS = 5
COLS = 5

# define the number of mines to place
NUM_MINES = 3

# create the initial minefield, filled with zeros
minefield = [[0 for _ in range(COLS)] for _ in range(ROWS)]

# randomly place the mines in the minefield
for i in range(NUM_MINES):
    row = random.randint(0, ROWS-1)
    col = random.randint(0, COLS-1)
    minefield[row][col] = '*'

# create the game board, initially hidden2
board = [['#' for _ in range(COLS)] for _ in range(ROWS)]

# define a function to print the game board
def print_board(board):
    for row in board:
        print(' '.join(row))

# define a function to get user input for a row and column
def get_move():
    while True:
        move = input('Enter row and column (e.g. "1 2"): ').split()
        if len(move) == 2 and move[0].isdigit() and move[1].isdigit():
            row = int(move[0]) - 1
            col = int(move[1]) - 1
            if row in range(ROWS) and col in range(COLS):
                return (row, col)
            
        print('Invalid move. Try again.')

# define the main game loop
while True:
    clear_output(wait=True)
    print_board(board)
    row, col = get_move()
    if minefield[row][col] == '*':
        print('Game over. You hit a mine.')
        break
    else:
        # count the number of adjacent mines
        count = 0
        for r in range(max(0, row-1), min(ROWS, row+2)):
            for c in range(max(0, col-1), min(COLS, col+2)):
                if minefield[r][c] == '*':
                    count += 1
        if count == 0:
          board[row][col] = '-'            

          #Python acept negative number as index, sÃ³ adjust this
          if(row-1 > 0):
            if(board[row-1][col] == '#'):
              board[row-1][col] = '-'

          #Do the same with cola
          if(col - 1 > 0):
            board[row][col-1] = '-'

          if(row < ROWS-1  and board[row+1][col] == '#'):
            board[row+1][col] = '-'

            if( col < COLS-1 and board[row][col+1] == '#'):
              board[row][col+1] = '-'
        else:  
          board[row][col] = str(count)
        if all(all(x != '#' for x in row) for row in board):
            print_board(board)
            print('Congratulations! You won!')
            break